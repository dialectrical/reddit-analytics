{"version":3,"sources":["img/logo.svg","Components/Styles/StyledInput.js","Components/Styles/StyledTable.js","Components/Heatmap.js","Components/Hooks/useGetWeeklyTimetable.js","Components/Hooks/useGetWeekStart.js","Components/Styles/StyledButton.js","Components/SubmitButton.js","Components/Styles/Styleda.js","Components/hourlyList.js","App.js","Components/Hooks/getDailyData.js","Components/SubredditInput.js","reportWebVitals.js","index.js"],"names":["StyledInputGroup","styled","InputGroup","StyledInputGroupText","InputGroupText","StyledInput","Input","StyledTable","Table","StyledHourlyTable","Styledtd","td","Styledth","th","Heatmap","weeklyData","setActiveHourlyData","bordered","className","style","marginTop","fontSize","overflowY","map","x","console","log","backgroundColor","length","onClick","indexOf","Spinner","size","children","width","height","useGetWeeklyTimetable","weekStart","timestamp","Date","now","setHours","today","getDay","useGetWeekStart","newWeeklyTimetable","d","h","searchStart","push","StyledButton","Button","SubmitButton","func","color","Styleda","a","hourlyList","data","startTime","endTime","list","href","full_link","target","title","textAlign","subreddit","App","useState","setWeeklyData","activeHourlyData","subredditSearch","setSubredditSearch","baseURL","setBaseURL","weeklyTimetable","useEffect","time","url","updateState","http","rateLimit","axios","create","maxRequests","perMilliseconds","fetchData","getMaxRPS","get","then","response","catch","reason","dailyData","getDailyData","bannerColor","src","logo","alt","margin","placeholder","onChange","event","currentTarget","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,G,MAAA,IAA0B,kC,sCCG5BA,EAAmBC,YAAOC,IAAPD,CAAH,8MAYhBE,EAAuBF,YAAOG,IAAPH,CAAH,uGAMpBI,EAAcJ,YAAOK,IAAPL,CAAH,+E,uBClBXM,EAAcN,YAAOO,IAAPP,CAAH,2SAiBXQ,EAAoBR,YAAOO,IAAPP,CAAH,gSAgBjBS,EAAWT,IAAOU,GAAV,0JAURC,EAAWX,IAAOY,GAAV,sGC1CRC,EAAU,SAACC,EAAYC,GAClC,OAAKD,EAaqB,UAAfA,EAEP,eAACR,EAAD,CAAaU,UAAQ,EAArB,UACE,oBAAIC,UAAU,YAAYC,MAAO,CAAEC,UAAW,MAAOC,SAAU,OAA/D,0BAGA,kGACoE,IAClE,uBAFF,qDAUJ,qBAAKF,MAAO,CAAEG,UAAW,UAAzB,SACE,eAACf,EAAD,CAAaU,UAAQ,EAArB,UACE,gCACE,+BACE,uBACA,cAACL,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,oBACA,cAACA,EAAD,qBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,sBACA,cAACA,EAAD,0BAGJ,kCACE,+BACE,cAACA,EAAD,qBACCG,EAAW,GAAGQ,KAAI,SAACC,GAElB,OADAC,QAAQC,IAAIF,GAEV,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,UACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,qBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,UACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,sBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,WACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,wBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,aACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,uBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,YACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,qBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,UACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,eAKX,+BACE,cAAChB,EAAD,uBACCG,EAAW,GAAGQ,KAAI,SAACC,GAClB,OACE,cAACd,EAAD,CACES,MAAO,CACLQ,gBAAiB,qBAAuBH,EAAEI,OAAS,KAErDC,QAAS,WACPb,EAAoB,CAClB,CAAC,YACD,CAACD,EAAW,GAAGe,QAAQN,IACvBA,KARN,SAYGA,EAAEI,uBA1Mf,eAACrB,EAAD,CAAaU,UAAQ,EAArB,UACE,cAACc,EAAA,EAAD,CACEC,KAAK,KACLC,SAAS,GACTd,MAAO,CAAEC,UAAW,MAAOc,MAAO,MAAOC,OAAQ,SAElD,GACD,2CACA,oGCbKC,EAAwB,WAInC,IAHA,IAAMC,ECHuB,WAC7B,IAAMC,EAAY,IAAIC,KAAKA,KAAKC,OAChCF,EAAUG,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAMC,EAAQJ,EAAUK,SACxB,OAAc,IAAVD,EACKJ,EAAY,OACA,IAAVI,EACFJ,EAAS,OACG,IAAVI,EACFJ,EAAS,OACG,IAAVI,EACFJ,EAAS,MACG,IAAVI,EACFJ,EAAS,OACG,IAAVI,EACFJ,EAAS,QACG,IAAVI,EACFJ,EAAS,aADX,EDbWM,GAEdC,EAAqB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAcX,EAAgB,MAAJS,EAAmB,KAAJC,EAC7CF,EAAmBC,GAAGG,KAAKD,EAAc,KAI7C,OAAOH,G,mEEVIK,EAAejD,YAAOkD,IAAPlD,CAAH,oTCAZmD,EAAe,SAAAC,GAC1B,OACE,cAACH,EAAD,CAAcI,MAAM,UAAUzB,QAASwB,EAAvC,qBCHSE,EAAUtD,IAAOuD,EAAV,iHCEPC,EAAa,SAAAC,GACxB,IAAIC,EAAYD,EAAK,GAAG,GACpBE,EAAUD,EAAY,EACtBE,EAAOH,EAAK,GAAGnC,KAAI,SAAAC,GAAC,OACtB,6BACE,cAACd,EAAD,UACE,cAAC6C,EAAD,CAASO,KAAMtC,EAAEuC,UAAWC,OAAO,SAAnC,SACGxC,EAAEyC,eAMX,GAAIJ,EAAKjC,OACP,OACE,eAACnB,EAAD,CAAmBQ,UAAQ,EAA3B,UACE,wBACEE,MAAO,CACL+C,UAAW,UAFf,UAKGR,EAAK,GAAG9B,OALX,yBAKyC8B,EAAK,GAAG,GAAGS,UALpD,kBAMSR,EANT,QAMyBC,EANzB,OAMsCF,EAAK,MAE3C,gCAAQG,QCkCDO,EAnDI,WAAO,IAAD,EACaC,qBADb,mBAChBtD,EADgB,KACJuD,EADI,OAEyBD,mBAAS,CAAC,GAAI,GAAI,KAF3C,mBAEhBE,EAFgB,KAEEvD,EAFF,OAGuBqD,mBAAS,gBAHhC,mBAGhBG,EAHgB,KAGCC,EAHD,OAIOJ,mBAC5B,sFALqB,mBAIhBK,EAJgB,KAIPC,EAJO,KAOjBC,EAAkBxC,IAExByC,qBAAU,YCjBgB,SAACC,EAAMC,EAAKC,GACtCA,IACA,IAAMC,EAAOC,IAAUC,IAAMC,SAAU,CACrCC,YAAa,EACbC,gBAAiB,MAEf5B,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE9B6B,EAAS,uCAAG,WAAMzC,GAAN,eAAAU,EAAA,sDACPT,EAAI,EADG,YACAA,EAAI,IADJ,wBAEdkC,EAAKO,YAFS,SAGRP,EACHQ,IAAIV,EAAM,UAAYD,EAAKhC,GAAGC,GAAK,YAAc+B,EAAKhC,GAAGC,GAAK,QAC9D2C,MAAK,SAAAC,GAAQ,OAAIjC,EAAKZ,GAAGG,KAAK0C,EAASjC,KAAKA,SAC5CkC,OAAM,SAAAC,GAAM,OAAIb,EAAY,YANjB,OAQdvD,QAAQC,IAAIoD,EAAKhC,GAAGC,IACpBtB,QAAQC,IAAIgC,GATE,OACQX,IADR,2DAAH,uDAaA,uCAAG,4BAAAS,EAAA,sDACPV,EAAI,EADG,YACAA,EAAI,GADJ,gCAERyC,EAAUzC,GAFF,OACOA,IADP,+CAITkC,EAAYtB,IAJH,2CAAH,oDAOfoC,GDVEC,CAAanB,EAAiBF,EAASJ,KACtC,CAACI,IAEJ,IEjB4BrB,EF2B5B,OACE,sBAAKnC,UAAU,OAAf,UACE,cAAC,IAAD,CACE4C,KAAK,mDACLkC,YAAY,YAEd,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,GAAGjF,UAAU,SACjC,oBAAIC,MAAO,CAAEiF,OAAQ,mBAArB,4CAGA,oEAEF,iCACE,mBAAGjF,MAAO,CAAEiF,OAAQ,mBAApB,qLEzCsB/C,EF8CNoB,EExCpB,8BACE,eAACzE,EAAD,WACE,cAACG,EAAD,iBACA,cAACE,EAAD,CAAagG,YAAY,eAAeC,SARzB,SAAAC,GACnB,OAAOlD,EAAKkD,EAAMC,cAAcC,gBF6C3BrD,GA9BQ,WACbuB,EACE,gEACEH,EACA,aAEJF,IACAtD,OAwBKF,EAAQC,EAAYC,GACpBuD,EAAmBd,EAAWc,GAAoB,oCG5C5CmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e071a1e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.63ed6541.svg\";","import styled from \"styled-components\";\r\nimport { InputGroup, InputGroupText, Input } from \"reactstrap\";\r\n\r\nexport const StyledInputGroup = styled(InputGroup)`\r\n  font-family: Verdana;\r\n  width: 20vw;\r\n  margin: auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  border: #efefed;\r\n  @media (max-width: 1024px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\n\r\nexport const StyledInputGroupText = styled(InputGroupText)`\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background-color: #ff4500;\r\n`;\r\n\r\nexport const StyledInput = styled(Input)`\r\n  text-align: left;\r\n  background-color: #eff7ff;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nexport const StyledTable = styled(Table)`\r\n  background: #fafafa;\r\n  border: 1px solid #efefed;\r\n  border-radius: 7px;\r\n  color: #222222;\r\n  margin: auto;\r\n  font-family: Verdana;\r\n  width: 90vw;\r\n  height: 24vw;\r\n  text-align: center;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 88vh;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nexport const StyledHourlyTable = styled(Table)`\r\n  background: #fafafa;\r\n  border: 1px solid #efefed;\r\n  border-radius: 7px;\r\n  color: #222222;\r\n  width: 40vw;\r\n  margin-top: 20px;\r\n  margin-left: 30vw;\r\n  font-family: Verdana;\r\n\r\n  @media (max-width: 1024px) {\r\n    margin-left: 5vw;\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const Styledtd = styled.td`\r\n  border: none;\r\n  cursor: pointer;\r\n  margin: auto;\r\n  text-align: center;\r\n  :hover {\r\n    background-color: #eff7ff;\r\n  }\r\n`;\r\n\r\nexport const Styledth = styled.th`\r\n  height: 3vw;\r\n\r\n  @media (max-width: 1024px) {\r\n    height: 11vh;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport { StyledTable, Styledtd, Styledth } from \"./Styles/StyledTable\";\n\nexport const Heatmap = (weeklyData, setActiveHourlyData) => {\n  if (!weeklyData) {\n    return (\n      <StyledTable bordered>\n        <Spinner\n          size=\"sm\"\n          children=\"\"\n          style={{ marginTop: \"5vw\", width: \"7vw\", height: \"7vw\" }}\n        />\n        {\"\"}\n        <p>Loading...</p>\n        <p>Due to API rate limits, this process takes about three minutes.</p>\n      </StyledTable>\n    );\n  } else if (weeklyData === \"Error\") {\n    return (\n      <StyledTable bordered>\n        <h2 className=\"display-3\" style={{ marginTop: \"5vw\", fontSize: \"7vw\" }}>\n          ðŸ‘¾\n        </h2>\n        <p>\n          Uh-oh! There's been an error. Please wait a moment and try again.{\" \"}\n          <br />\n          Don't worry, last week isn't going anywhere.\n        </p>\n      </StyledTable>\n    );\n  }\n\n  return (\n    <div style={{ overflowY: \"scroll\" }}>\n      <StyledTable bordered>\n        <thead>\n          <tr>\n            <th></th>\n            <Styledth>0 - 1</Styledth>\n            <Styledth>1 - 2</Styledth>\n            <Styledth>2 - 3</Styledth>\n            <Styledth>3 - 4</Styledth>\n            <Styledth>4 - 5</Styledth>\n            <Styledth>5 - 6</Styledth>\n            <Styledth>6 - 7</Styledth>\n            <Styledth>7 - 8</Styledth>\n            <Styledth>8 - 9</Styledth>\n            <Styledth>9 - 10</Styledth>\n            <Styledth>10 - 11</Styledth>\n            <Styledth>11 - 12</Styledth>\n            <Styledth>12 - 13</Styledth>\n            <Styledth>13 - 14</Styledth>\n            <Styledth>14 - 15</Styledth>\n            <Styledth>15 - 16</Styledth>\n            <Styledth>16 - 17</Styledth>\n            <Styledth>17 - 18</Styledth>\n            <Styledth>18 - 19</Styledth>\n            <Styledth>19 - 20</Styledth>\n            <Styledth>20 - 21</Styledth>\n            <Styledth>21 - 22</Styledth>\n            <Styledth>22 - 23</Styledth>\n            <Styledth>23 - 0</Styledth>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <Styledth>Sunday</Styledth>\n            {weeklyData[0].map((x) => {\n              console.log(x);\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Sunday\"],\n                      [weeklyData[0].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Monday</Styledth>\n            {weeklyData[1].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Monday\"],\n                      [weeklyData[1].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Tuesday</Styledth>\n            {weeklyData[2].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Tuesday\"],\n                      [weeklyData[2].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Wednesday</Styledth>\n            {weeklyData[3].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Wednesday\"],\n                      [weeklyData[3].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Thursday</Styledth>\n            {weeklyData[4].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Thursday\"],\n                      [weeklyData[4].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Friday</Styledth>\n            {weeklyData[5].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Friday\"],\n                      [weeklyData[5].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n          <tr>\n            <Styledth>Saturday</Styledth>\n            {weeklyData[6].map((x) => {\n              return (\n                <Styledtd\n                  style={{\n                    backgroundColor: \"hsl(16, 100%, 50%,\" + x.length / 100,\n                  }}\n                  onClick={() => {\n                    setActiveHourlyData([\n                      [\"Saturday\"],\n                      [weeklyData[6].indexOf(x)],\n                      x,\n                    ]);\n                  }}\n                >\n                  {x.length}\n                </Styledtd>\n              );\n            })}\n          </tr>\n        </tbody>\n      </StyledTable>\n    </div>\n  );\n};\n","import { useGetWeekStart } from \"./useGetWeekStart\";\r\n\r\nexport const useGetWeeklyTimetable = () => {\r\n  const weekStart = useGetWeekStart();\r\n\r\n  let newWeeklyTimetable = [[], [], [], [], [], [], []];\r\n  for (let d = 0; d < 7; d++) {\r\n    for (let h = 0; h < 24; h++) {\r\n      let searchStart = weekStart + d * 86400000 + h * 3600000;\r\n      newWeeklyTimetable[d].push(searchStart / 1000);\r\n    }\r\n  }\r\n\r\n  return newWeeklyTimetable;\r\n};\r\n","export const useGetWeekStart = () => {\r\n  const timestamp = new Date(Date.now());\r\n  timestamp.setHours(0, 0, 0, 0);\r\n  const today = timestamp.getDay();\r\n  if (today === 0) {\r\n    return timestamp - 604800000;\r\n  } else if (today === 1) {\r\n    return timestamp - (604800000 + 86400000);\r\n  } else if (today === 2) {\r\n    return timestamp - (604800000 + 86400000 * 2);\r\n  } else if (today === 3) {\r\n    return timestamp - (604800000 + 86400000 * 3);\r\n  } else if (today === 4) {\r\n    return timestamp - (604800000 + 86400000 * 4);\r\n  } else if (today === 5) {\r\n    return timestamp - (604800000 + 86400000 * 5);\r\n  } else if (today === 6) {\r\n    return timestamp - (604800000 + 86400000 * 6);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nexport const StyledButton = styled(Button)`\r\n  marign-top: 10px;\r\n  margin-bottom: 10px;\r\n  width: 10vw;\r\n  background-color: #cee3f8;\r\n  border: 1px;\r\n  color: #336699;\r\n  font-family: Verdana;\r\n  padding: 2px 6px 3px;\r\n  :hover {\r\n    background-color: #0077d6;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 25vw;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./Styles/StyledButton\";\r\n\r\nexport const SubmitButton = func => {\r\n  return (\r\n    <StyledButton color=\"primary\" onClick={func}>\r\n      Search\r\n    </StyledButton>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Styleda = styled.a`\r\n  color: #0077d6;\r\n  text-decoration: none;\r\n  :visited {\r\n    color: #7f4fc4;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledHourlyTable, Styledtd } from \"./Styles/StyledTable\";\r\nimport { Styleda } from \"./Styles/Styleda\";\r\n\r\nexport const hourlyList = data => {\r\n  let startTime = data[1][0];\r\n  let endTime = startTime + 1;\r\n  let list = data[2].map(x => (\r\n    <tr>\r\n      <Styledtd>\r\n        <Styleda href={x.full_link} target=\"_blank\">\r\n          {x.title}\r\n        </Styleda>\r\n      </Styledtd>\r\n    </tr>\r\n  ));\r\n\r\n  if (list.length) {\r\n    return (\r\n      <StyledHourlyTable bordered>\r\n        <thead\r\n          style={{\r\n            textAlign: \"center\"\r\n          }}\r\n        >\r\n          {data[2].length} posts submitted to r/{data[2][0].subreddit} between\r\n          hours {startTime} and {endTime} on {data[0]}\r\n        </thead>\r\n        <tbody>{list}</tbody>\r\n      </StyledHourlyTable>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport GithubCorner from \"react-github-corner\";\nimport \"./App.css\";\nimport logo from \"./img/logo.svg\";\nimport { SubredditInput } from \"./Components/SubredditInput\";\nimport { Heatmap } from \"./Components/Heatmap\";\nimport { useGetWeeklyTimetable } from \"./Components/Hooks/useGetWeeklyTimetable\";\nimport { getDailyData } from \"./Components/Hooks/getDailyData\";\nimport { SubmitButton } from \"./Components/SubmitButton\";\nimport { hourlyList } from \"./Components/hourlyList\";\n\nexport const App = () => {\n  const [weeklyData, setWeeklyData] = useState();\n  const [activeHourlyData, setActiveHourlyData] = useState([[], [], []]);\n  const [subredditSearch, setSubredditSearch] = useState(\"fountainpens\");\n  const [baseURL, setBaseURL] = useState(\n    \"https://api.pushshift.io/reddit/search/submission/?subreddit=fountainpens&size=500\"\n  );\n  const weeklyTimetable = useGetWeeklyTimetable();\n\n  useEffect(() => {\n    getDailyData(weeklyTimetable, baseURL, setWeeklyData);\n  }, [baseURL]);\n\n  const update = () => {\n    setBaseURL(\n      \"https://api.pushshift.io/reddit/search/submission/?subreddit=\" +\n        subredditSearch +\n        \"&size=500\"\n    );\n    setWeeklyData();\n    setActiveHourlyData();\n  };\n\n  return (\n    <div className=\"main\">\n      <GithubCorner\n        href=\"https://github.com/dialectrical/reddit-analytics\"\n        bannerColor=\"#FF4500\"\n      />\n      <header>\n        <img src={logo} alt=\"\" className=\"logo\" />\n        <h2 style={{ margin: \"0px 5px 0px 5px\" }}>\n          Last Week's Subreddit Activity\n        </h2>\n        <p>See last week's activity, today.</p>\n      </header>\n      <body>\n        <p style={{ margin: \"0px 5px 0px 5px\" }}>\n          Enter a subreddit name in the box below and click submit to get\n          started. Heatmap squares can be clicked to view a list of posts made\n          during that particular timeframe.\n        </p>\n        {SubredditInput(setSubredditSearch)}\n        {SubmitButton(update)}\n        {Heatmap(weeklyData, setActiveHourlyData)}\n        {activeHourlyData ? hourlyList(activeHourlyData) : <></>}\n      </body>\n    </div>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\r\nimport rateLimit from \"axios-rate-limit\";\r\n\r\nexport const getDailyData = (time, url, updateState) => {\r\n  updateState();\r\n  const http = rateLimit(axios.create(), {\r\n    maxRequests: 1,\r\n    perMilliseconds: 1000\r\n  });\r\n  let data = [[], [], [], [], [], [], []];\r\n\r\n  const fetchData = async d => {\r\n    for (let h = 0; h < 24; h++) {\r\n      http.getMaxRPS();\r\n      await http\r\n        .get(url + \"&after=\" + time[d][h] + \"&before=\" + (time[d][h] + 35400))\r\n        .then(response => data[d].push(response.data.data))\r\n        .catch(reason => updateState(\"Error\"));\r\n\r\n      console.log(time[d][h]);\r\n      console.log(data);\r\n    }\r\n  };\r\n\r\n  const dailyData = async () => {\r\n    for (let d = 0; d < 7; d++) {\r\n      await fetchData(d);\r\n    }\r\n    return updateState(data);\r\n  };\r\n\r\n  dailyData();\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  StyledInputGroup,\r\n  StyledInputGroupText,\r\n  StyledInput\r\n} from \"./Styles/StyledInput\";\r\n\r\nexport const SubredditInput = func => {\r\n  const handleChange = event => {\r\n    return func(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledInputGroup>\r\n        <StyledInputGroupText>r/</StyledInputGroupText>\r\n        <StyledInput placeholder=\"fountainpens\" onChange={handleChange} />\r\n      </StyledInputGroup>\r\n    </div>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}